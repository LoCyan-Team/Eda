# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish

on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: 'stable'
          version: 3.24.3
          cache-sdk: true

      - name: Install Dependencies
        shell: pwsh
        #        run: dart pub global activate -s path tools/flutter_distributor/packages/flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Setup Inno Setup 6
        shell: pwsh
        run: |-
          ./tools/is_setup.exe /VERYSLIENT
          Copy-Item "./tools/ChineseSimplified.isl" -Destination "C:\Program Files (x86)\Inno Setup 6\Languages"
      - name: Setup 7ZIP
        shell: pwsh
        run: |-
          ./tools/7z2405-x64.exe /S

      - name: Pack EXE Installer & Portable Archive
        run: |-
          flutter_distributor package --platform windows --target exe,zip

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Artifact(Dist)
          path: dist

  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: 'stable'
          version: 3.24.3
          cache-sdk: true

      - name: Install Dependencies
        run: |-
          sudo apt-get update
          sudo apt-get install clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev rpm patchelf locate libfuse2
          dart pub global activate flutter_distributor

      - name: Setup AppImageTool
        run: |-
          sudo mv tools/appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
          sudo chmod a+x /usr/local/bin/appimagetool

      - name: Pack Installers
        run: flutter_distributor package --platform linux --targets appimage,deb,rpm

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux Artifact(Dist)
          path: dist

  publish_releases:
    name: publish
    runs-on: ubuntu-latest
    needs:
      - windows
      - linux

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Version
        run: |-
          sudo snap install yq
          version=$(yq eval '.version' pubspec.yaml)
          echo "VERSION=$version" >> $GITHUB_ENV
      - name: Download Build Artifact(Windows)
        uses: actions/download-artifact@v4
        with:
          name: "Windows Artifact(Dist)"
          path: dist/
      - name: Download Build Artifact(Linux)
        uses: actions/download-artifact@v4
        with:
          name: "Linux Artifact(Dist)"
          path: dist/
      - name: Download Build Artifact(MacOS arm64)
        uses: actions/download-artifact@v4
        with:
          name: "MacOS Artifact(Dist arm64)"
          path: dist/
      - name: Download Build Artifact(MacOS x64)
        uses: actions/download-artifact@v4
        with:
          name: "MacOS Artifact(Dist x64)"
          path: dist/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          body_path: RELEASE_CHANGELOG.md
          prerelease: false
          draft: false
          generate_release_notes: true
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          files: |
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}-windows-setup.exe
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}-windows.zip
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}-linux.deb
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}-linux.rpm
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}-linux.AppImage
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}+${{ env.VERSION }}-windows-setup.exe
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}+${{ env.VERSION }}-windows.zip
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}+${{ env.VERSION }}-linux.deb
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}+${{ env.VERSION }}-linux.rpm
            ./dist/${{ env.VERSION }}/nyalcf-${{ env.VERSION }}+${{ env.VERSION }}-linux.AppImage
